// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: query.proto

package evm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for getting multiple blocks in a range
type GetBlocksByRangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Starting block number (inclusive)
	FromBlock uint64 `protobuf:"varint,1,opt,name=fromBlock,proto3" json:"fromBlock,omitempty"`
	// Ending block number (inclusive)
	ToBlock uint64 `protobuf:"varint,2,opt,name=toBlock,proto3" json:"toBlock,omitempty"`
	// Whether to include full transaction details for each block
	IncludeTransactions bool `protobuf:"varint,3,opt,name=includeTransactions,proto3" json:"includeTransactions,omitempty"`
	// Maximum number of blocks to return (for pagination)
	Limit         *uint32 `protobuf:"varint,4,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlocksByRangeRequest) Reset() {
	*x = GetBlocksByRangeRequest{}
	mi := &file_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlocksByRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksByRangeRequest) ProtoMessage() {}

func (x *GetBlocksByRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksByRangeRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksByRangeRequest) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlocksByRangeRequest) GetFromBlock() uint64 {
	if x != nil {
		return x.FromBlock
	}
	return 0
}

func (x *GetBlocksByRangeRequest) GetToBlock() uint64 {
	if x != nil {
		return x.ToBlock
	}
	return 0
}

func (x *GetBlocksByRangeRequest) GetIncludeTransactions() bool {
	if x != nil {
		return x.IncludeTransactions
	}
	return false
}

func (x *GetBlocksByRangeRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

// Response containing blocks within the requested range
type GetBlocksByRangeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of blocks within the range
	Blocks []*BlockWithTransactions `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	// Whether more blocks exist beyond the limit
	HasMore       bool `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlocksByRangeResponse) Reset() {
	*x = GetBlocksByRangeResponse{}
	mi := &file_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlocksByRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksByRangeResponse) ProtoMessage() {}

func (x *GetBlocksByRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksByRangeResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksByRangeResponse) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetBlocksByRangeResponse) GetBlocks() []*BlockWithTransactions {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *GetBlocksByRangeResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// Request for getting a block by number
type GetBlockByNumberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The block number to retrieve
	BlockNumber uint64 `protobuf:"varint,1,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	// Whether to include full transaction details (if false, only transaction hashes are returned)
	IncludeTransactions bool `protobuf:"varint,2,opt,name=includeTransactions,proto3" json:"includeTransactions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetBlockByNumberRequest) Reset() {
	*x = GetBlockByNumberRequest{}
	mi := &file_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByNumberRequest) ProtoMessage() {}

func (x *GetBlockByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByNumberRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByNumberRequest) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetBlockByNumberRequest) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *GetBlockByNumberRequest) GetIncludeTransactions() bool {
	if x != nil {
		return x.IncludeTransactions
	}
	return false
}

// Response containing the requested block
type GetBlockByNumberResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested block, null if not found
	Block *BlockHeader `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// Transaction data (format depends on includeTransactions flag in request)
	Transactions  [][]byte `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockByNumberResponse) Reset() {
	*x = GetBlockByNumberResponse{}
	mi := &file_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByNumberResponse) ProtoMessage() {}

func (x *GetBlockByNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByNumberResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByNumberResponse) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetBlockByNumberResponse) GetBlock() *BlockHeader {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GetBlockByNumberResponse) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Request for getting a block by hash
type GetBlockByHashRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The block hash to retrieve
	BlockHash []byte `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	// Whether to include full transaction details (if false, only transaction hashes are returned)
	IncludeTransactions bool `protobuf:"varint,2,opt,name=includeTransactions,proto3" json:"includeTransactions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetBlockByHashRequest) Reset() {
	*x = GetBlockByHashRequest{}
	mi := &file_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHashRequest) ProtoMessage() {}

func (x *GetBlockByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHashRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{4}
}

func (x *GetBlockByHashRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *GetBlockByHashRequest) GetIncludeTransactions() bool {
	if x != nil {
		return x.IncludeTransactions
	}
	return false
}

// Response containing the requested block
type GetBlockByHashResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested block, null if not found
	Block *BlockHeader `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// Transaction data (format depends on includeTransactions flag in request)
	Transactions  [][]byte `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockByHashResponse) Reset() {
	*x = GetBlockByHashResponse{}
	mi := &file_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHashResponse) ProtoMessage() {}

func (x *GetBlockByHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHashResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByHashResponse) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetBlockByHashResponse) GetBlock() *BlockHeader {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GetBlockByHashResponse) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Request for getting logs
type GetLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Starting block number (inclusive)
	FromBlock *uint64 `protobuf:"varint,1,opt,name=fromBlock,proto3,oneof" json:"fromBlock,omitempty"`
	// Ending block number (inclusive)
	ToBlock *uint64 `protobuf:"varint,2,opt,name=toBlock,proto3,oneof" json:"toBlock,omitempty"`
	// Contract addresses to filter by (empty means all addresses)
	Addresses [][]byte `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Topics to filter by (each position can have multiple possible values)
	// topics[0] is an array of possible values for the first topic
	// topics[1] is an array of possible values for the second topic, etc.
	Topics []*TopicFilter `protobuf:"bytes,4,rep,name=topics,proto3" json:"topics,omitempty"`
	// Block hash to filter by (alternative to fromBlock/toBlock)
	BlockHash     []byte `protobuf:"bytes,5,opt,name=blockHash,proto3,oneof" json:"blockHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	mi := &file_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{6}
}

func (x *GetLogsRequest) GetFromBlock() uint64 {
	if x != nil && x.FromBlock != nil {
		return *x.FromBlock
	}
	return 0
}

func (x *GetLogsRequest) GetToBlock() uint64 {
	if x != nil && x.ToBlock != nil {
		return *x.ToBlock
	}
	return 0
}

func (x *GetLogsRequest) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *GetLogsRequest) GetTopics() []*TopicFilter {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *GetLogsRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

// Filter for log topics at a specific position
type TopicFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Possible values for this topic position (OR condition)
	Values        [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicFilter) Reset() {
	*x = TopicFilter{}
	mi := &file_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicFilter) ProtoMessage() {}

func (x *TopicFilter) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicFilter.ProtoReflect.Descriptor instead.
func (*TopicFilter) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{7}
}

func (x *TopicFilter) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

// Response containing matching logs
type GetLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of logs matching the filter criteria
	Logs          []*Log `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsResponse) Reset() {
	*x = GetLogsResponse{}
	mi := &file_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsResponse) ProtoMessage() {}

func (x *GetLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsResponse.ProtoReflect.Descriptor instead.
func (*GetLogsResponse) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{8}
}

func (x *GetLogsResponse) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

// Block with its transactions
type BlockWithTransactions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The block header
	Block *BlockHeader `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// Transaction data (format depends on includeTransactions flag in request)
	Transactions  [][]byte `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockWithTransactions) Reset() {
	*x = BlockWithTransactions{}
	mi := &file_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockWithTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockWithTransactions) ProtoMessage() {}

func (x *BlockWithTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockWithTransactions.ProtoReflect.Descriptor instead.
func (*BlockWithTransactions) Descriptor() ([]byte, []int) {
	return file_query_proto_rawDescGZIP(), []int{9}
}

func (x *BlockWithTransactions) GetBlock() *BlockHeader {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockWithTransactions) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_query_proto protoreflect.FileDescriptor

const file_query_proto_rawDesc = "" +
	"\n" +
	"\vquery.proto\x12\abds.evm\x1a\fmodels.proto\"\xa8\x01\n" +
	"\x17GetBlocksByRangeRequest\x12\x1c\n" +
	"\tfromBlock\x18\x01 \x01(\x04R\tfromBlock\x12\x18\n" +
	"\atoBlock\x18\x02 \x01(\x04R\atoBlock\x120\n" +
	"\x13includeTransactions\x18\x03 \x01(\bR\x13includeTransactions\x12\x19\n" +
	"\x05limit\x18\x04 \x01(\rH\x00R\x05limit\x88\x01\x01B\b\n" +
	"\x06_limit\"l\n" +
	"\x18GetBlocksByRangeResponse\x126\n" +
	"\x06blocks\x18\x01 \x03(\v2\x1e.bds.evm.BlockWithTransactionsR\x06blocks\x12\x18\n" +
	"\ahasMore\x18\x02 \x01(\bR\ahasMore\"m\n" +
	"\x17GetBlockByNumberRequest\x12 \n" +
	"\vblockNumber\x18\x01 \x01(\x04R\vblockNumber\x120\n" +
	"\x13includeTransactions\x18\x02 \x01(\bR\x13includeTransactions\"j\n" +
	"\x18GetBlockByNumberResponse\x12*\n" +
	"\x05block\x18\x01 \x01(\v2\x14.bds.evm.BlockHeaderR\x05block\x12\"\n" +
	"\ftransactions\x18\x02 \x03(\fR\ftransactions\"g\n" +
	"\x15GetBlockByHashRequest\x12\x1c\n" +
	"\tblockHash\x18\x01 \x01(\fR\tblockHash\x120\n" +
	"\x13includeTransactions\x18\x02 \x01(\bR\x13includeTransactions\"h\n" +
	"\x16GetBlockByHashResponse\x12*\n" +
	"\x05block\x18\x01 \x01(\v2\x14.bds.evm.BlockHeaderR\x05block\x12\"\n" +
	"\ftransactions\x18\x02 \x03(\fR\ftransactions\"\xe9\x01\n" +
	"\x0eGetLogsRequest\x12!\n" +
	"\tfromBlock\x18\x01 \x01(\x04H\x00R\tfromBlock\x88\x01\x01\x12\x1d\n" +
	"\atoBlock\x18\x02 \x01(\x04H\x01R\atoBlock\x88\x01\x01\x12\x1c\n" +
	"\taddresses\x18\x03 \x03(\fR\taddresses\x12,\n" +
	"\x06topics\x18\x04 \x03(\v2\x14.bds.evm.TopicFilterR\x06topics\x12!\n" +
	"\tblockHash\x18\x05 \x01(\fH\x02R\tblockHash\x88\x01\x01B\f\n" +
	"\n" +
	"_fromBlockB\n" +
	"\n" +
	"\b_toBlockB\f\n" +
	"\n" +
	"_blockHash\"%\n" +
	"\vTopicFilter\x12\x16\n" +
	"\x06values\x18\x01 \x03(\fR\x06values\"3\n" +
	"\x0fGetLogsResponse\x12 \n" +
	"\x04logs\x18\x01 \x03(\v2\f.bds.evm.LogR\x04logs\"g\n" +
	"\x15BlockWithTransactions\x12*\n" +
	"\x05block\x18\x01 \x01(\v2\x14.bds.evm.BlockHeaderR\x05block\x12\"\n" +
	"\ftransactions\x18\x02 \x03(\fR\ftransactions2\xd1\x02\n" +
	"\fQueryService\x12W\n" +
	"\x10GetBlocksByRange\x12 .bds.evm.GetBlocksByRangeRequest\x1a!.bds.evm.GetBlocksByRangeResponse\x12W\n" +
	"\x10GetBlockByNumber\x12 .bds.evm.GetBlockByNumberRequest\x1a!.bds.evm.GetBlockByNumberResponse\x12Q\n" +
	"\x0eGetBlockByHash\x12\x1e.bds.evm.GetBlockByHashRequest\x1a\x1f.bds.evm.GetBlockByHashResponse\x12<\n" +
	"\aGetLogs\x12\x17.bds.evm.GetLogsRequest\x1a\x18.bds.evm.GetLogsResponseB4Z2github.com/blockchain-data-standards/manifesto/evmb\x06proto3"

var (
	file_query_proto_rawDescOnce sync.Once
	file_query_proto_rawDescData []byte
)

func file_query_proto_rawDescGZIP() []byte {
	file_query_proto_rawDescOnce.Do(func() {
		file_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_query_proto_rawDesc), len(file_query_proto_rawDesc)))
	})
	return file_query_proto_rawDescData
}

var file_query_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_query_proto_goTypes = []any{
	(*GetBlocksByRangeRequest)(nil),  // 0: bds.evm.GetBlocksByRangeRequest
	(*GetBlocksByRangeResponse)(nil), // 1: bds.evm.GetBlocksByRangeResponse
	(*GetBlockByNumberRequest)(nil),  // 2: bds.evm.GetBlockByNumberRequest
	(*GetBlockByNumberResponse)(nil), // 3: bds.evm.GetBlockByNumberResponse
	(*GetBlockByHashRequest)(nil),    // 4: bds.evm.GetBlockByHashRequest
	(*GetBlockByHashResponse)(nil),   // 5: bds.evm.GetBlockByHashResponse
	(*GetLogsRequest)(nil),           // 6: bds.evm.GetLogsRequest
	(*TopicFilter)(nil),              // 7: bds.evm.TopicFilter
	(*GetLogsResponse)(nil),          // 8: bds.evm.GetLogsResponse
	(*BlockWithTransactions)(nil),    // 9: bds.evm.BlockWithTransactions
	(*BlockHeader)(nil),              // 10: bds.evm.BlockHeader
	(*Log)(nil),                      // 11: bds.evm.Log
}
var file_query_proto_depIdxs = []int32{
	9,  // 0: bds.evm.GetBlocksByRangeResponse.blocks:type_name -> bds.evm.BlockWithTransactions
	10, // 1: bds.evm.GetBlockByNumberResponse.block:type_name -> bds.evm.BlockHeader
	10, // 2: bds.evm.GetBlockByHashResponse.block:type_name -> bds.evm.BlockHeader
	7,  // 3: bds.evm.GetLogsRequest.topics:type_name -> bds.evm.TopicFilter
	11, // 4: bds.evm.GetLogsResponse.logs:type_name -> bds.evm.Log
	10, // 5: bds.evm.BlockWithTransactions.block:type_name -> bds.evm.BlockHeader
	0,  // 6: bds.evm.QueryService.GetBlocksByRange:input_type -> bds.evm.GetBlocksByRangeRequest
	2,  // 7: bds.evm.QueryService.GetBlockByNumber:input_type -> bds.evm.GetBlockByNumberRequest
	4,  // 8: bds.evm.QueryService.GetBlockByHash:input_type -> bds.evm.GetBlockByHashRequest
	6,  // 9: bds.evm.QueryService.GetLogs:input_type -> bds.evm.GetLogsRequest
	1,  // 10: bds.evm.QueryService.GetBlocksByRange:output_type -> bds.evm.GetBlocksByRangeResponse
	3,  // 11: bds.evm.QueryService.GetBlockByNumber:output_type -> bds.evm.GetBlockByNumberResponse
	5,  // 12: bds.evm.QueryService.GetBlockByHash:output_type -> bds.evm.GetBlockByHashResponse
	8,  // 13: bds.evm.QueryService.GetLogs:output_type -> bds.evm.GetLogsResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_query_proto_init() }
func file_query_proto_init() {
	if File_query_proto != nil {
		return
	}
	file_models_proto_init()
	file_query_proto_msgTypes[0].OneofWrappers = []any{}
	file_query_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_query_proto_rawDesc), len(file_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query_proto_goTypes,
		DependencyIndexes: file_query_proto_depIdxs,
		MessageInfos:      file_query_proto_msgTypes,
	}.Build()
	File_query_proto = out.File
	file_query_proto_goTypes = nil
	file_query_proto_depIdxs = nil
}
